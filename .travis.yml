language: shell

git:
  depth: false

# mono:
#  - latest

matrix:
  include:

#  - name: Linux PowerPC 64 (mono)
#    os: linux
#    dist: xenial
#    env:
#    - MULTIARCH_IMAGE="multiarch/debian-debootstrap:ppc64el-stretch"
#    services:
#        - docker

  - name: OS X 10.14 (.net core & mono)
    os: osx
    osx_image: xcode10.2

  - name: Linux ARM-64 (.net core & mono)
    os: linux
    dist: xenial
    env:
    - MULTIARCH_IMAGE="multiarch/debian-debootstrap:arm64-stretch"
    services:
        - docker

  - name: Linux ARM-v7 (mono)
    os: linux
    dist: xenial
    env:
    - MULTIARCH_IMAGE="multiarch/debian-debootstrap:armhf-buster"
    services:
        - docker

  - name: Linux i386 (mono)
    os: linux
    dist: xenial
    env:
    - MULTIARCH_IMAGE="multiarch/debian-debootstrap:i386-stretch"
    services:
        - docker

  - name: OS X 10.10 (mono)
    os: osx
    osx_image: xcode6.4

#  - name: OS X 10.12
#    os: osx
#    osx_image: xcode8.3
#  - name: OS X 10.13
#    os: osx
#    osx_image: xcode9.3

# https://docs.travis-ci.com/user/caching/
before_script:
- pushd Tests4Mono; . install-dotnet.sh; popd
- dotnet --info || true
- mono --version || true
- 'mono --version; msbuild /version; echo ""; nuget 2>&1 | head -4 || true'
- 'printenv | sort'
  
script:
- export DOTNET_SYSTEM_NET_HTTP_USESOCKETSHTTPHANDLER=0
- export DOTNET_SKIP_FIRST_TIME_EXPERIENCE=1; export DOTNET_CLI_TELEMETRY_OPTOUT=1;
- export CI=false
- '[[ $OS_X_VER -ge 13  || $(uname -s) == Linux ]] && dotnet restore --disable-parallel || true'
- nuget restore -verbosity quiet || true

- '[ $OS_X_VER -ge 13 ] && (dotnet test -f netcoreapp3.0 -c Release | cat) || true'
- '[ $OS_X_VER -ge 13 ] && (time bash benchmark.linux.sh) || true'
- |
  if [[ -n "$MULTIARCH_IMAGE" ]]; then
    set -e

    docker run --rm --privileged multiarch/qemu-user-static:register --reset
    docker run -d --name tests -t "${MULTIARCH_IMAGE}" bash -c 'sleep 424242'

    echo "RUN TESTS in the qemu. BUILDING MATRIX"
    cd Tests4Mono; source build-the-matrix.sh; echo $matrix_run; cd ..

    echo "Installing mono in the QEMU"
    docker cp Tests4Mono/install-dotnet.sh tests:/
    docker exec tests bash /install-dotnet.sh

    
    pushd $matrix
    docker exec tests mkdir -p $matrix
    docker cp ./. tests:$(pwd)
    sudo docker exec tests bash -ec "$matrix_run"

  else
    # MAC OS (check renice without sudo), both 14th and 10th
    echo "Starting tests using Mono in [$(pwd)]"
    cd Tests4Mono; set +e; source build-the-matrix.sh; echo $matrix_run
    # need -e -c
    bash -e -c "$matrix_run"
  fi
    
