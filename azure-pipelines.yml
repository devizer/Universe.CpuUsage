variables:
    buildConfiguration: "Debug"
    testProject: "Universe.CpuUsage.Tests/Universe.CpuUsage.Tests.csproj"
    solution: "Universe.CpuUsage.sln"

jobs:

  - job: Windows
    variables:
      OS: Windows
      LLVM: 9
    timeoutInMinutes: 299
    cancelTimeoutInMinutes: 1
    pool:
      vmImage: 'windows-latest'

    steps:
    
    - powershell: |
        dotnet test -c Debug -f netcoreapp2.2 --collect:"XPlat Code Coverage" -- RunConfiguration.DisableAppDomain=true 
      displayName: 'Tests'

    - script: |
        dotnet test --logger trx --no-build /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput=$(Build.SourcesDirectory)/coverage/ $(testProject)
      displayName: 'dotnet test'
      
    - script: |
        dotnet tool install dotnet-reportgenerator-globaltool --tool-path . 
        ./reportgenerator "-reports:$(Build.SourcesDirectory)/coverage/coverage.opencover.xml" "-targetdir:coverage/Cobertura" "-reporttypes:Cobertura;HTMLInline;HTMLChart"
      condition: eq( variables['Agent.OS'], 'Linux' )
      displayName: Run Reportgenerator on Linux

    - script: |
        dotnet tool install dotnet-reportgenerator-globaltool --tool-path .
        .\reportgenerator.exe "-reports:$(Build.SourcesDirectory)/coverage/coverage.opencover.xml" "-targetdir:coverage/Cobertura" "-reporttypes:Cobertura;HTMLInline;HTMLChart"
      condition: eq( variables['Agent.OS'], 'Windows_NT' )
      displayName: Run Reportgenerator on Windows

    - task: PublishTestResults@2
      inputs:
        testRunner: VSTest
        testResultsFiles: '**/*.trx'
        
    - task: PublishCodeCoverageResults@1
      inputs:
        summaryFileLocation: $(Build.SourcesDirectory)/coverage/Cobertura/Cobertura.xml
        reportDirectory: $(Build.SourcesDirectory)/coverage/Cobertura
        codecoverageTool: cobertura

    - task: DotNetCoreCLI@2
      inputs:
        command: publish
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        projects: $(solution)
        publishWebProjects: false
        modifyOutputPath: true
        zipAfterPublish: true

    - task: PublishBuildArtifacts@1


trigger:
- master

