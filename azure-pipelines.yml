variables:
    buildConfiguration: "Debug"
    testProject: "Universe.CpuUsage.Tests/Universe.CpuUsage.Tests.csproj"
    solution: "Universe.CpuUsage.sln"

jobs:

  - job: Crossplatform
    displayName: 'Crossplatform'
    pool:
      vmImage: ubuntu-latest
    timeoutInMinutes: 30
    strategy:
      maxParallel: 6
      matrix:
         'armel-debian-8':
           QEMU_IMAGE_ID: armel-debian-8
         'armel-debian-11':
           QEMU_IMAGE_ID: armel-debian-11
         'armhf-debian-12':
           QEMU_IMAGE_ID: armhf-debian-12
         'arm64-debian-13':
           QEMU_IMAGE_ID: arm64-debian-13
         'x64-debian-11':
           QEMU_IMAGE_ID: x64-debian-11
         'i386-debian-10':
           QEMU_IMAGE_ID: i386-debian-10

    steps:
    - script: |
        set -eu; set -o pipefail
        script=https://raw.githubusercontent.com/devizer/test-and-build/master/install-build-tools-bundle.sh; (wget -q -nv --no-check-certificate -O - $script 2>/dev/null || curl -ksSL $script) | bash >/dev/null
        Say --Reset-Stopwatch
        Say "CPU: $(Get-CpuName)"
        sudo apt-get update -qq; sudo apt-get install sshfs -y -qq # REMOVE?
        printenv | sort;
      displayName: 'Variables'

    - script: |
       set -eu; set -o pipefail
       Say "CPU: $(Get-CpuName)"
       Reset-Target-Framework -fw net47 -l latest
       cd Universe.CpuUsage.Tests
       dotnet remove package Appveyor.TestLogger
       time try-and-retry dotnet build -c Release -v:q Universe.CpuUsage.Tests.csproj
       cd bin/Release/net47
       ls -lah
       Say "Pull devizervlad/crossplatform-pipeline:$QEMU_IMAGE_ID"
       try-and-retry docker pull -q devizervlad/crossplatform-pipeline:$QEMU_IMAGE_ID
       Say "Test on [$QEMU_IMAGE_ID]"
       docker run -e VM_VARIABLES="VAR42;Hello" -e VAR42="42" -e Hello="Hello World" -v $(pwd):/job --privileged --device /dev/fuse --cap-add SYS_ADMIN --security-opt apparmor:unconfined -t --rm --hostname vm-container devizervlad/crossplatform-pipeline:$QEMU_IMAGE_ID nunit3-console --workers=1 Universe.CpuUsage.Tests.dll
      displayName: 'Test'



  - job: ARM64_Windows
    variables:
      OS: Windows
    timeoutInMinutes: 99
    cancelTimeoutInMinutes: 1
    pool:
      name: 'ARM64Win-pool'
    steps:
      - template: azure-steps-nix.yml

  - job: ARM32_Linux
    variables:
      OS: Linux
    timeoutInMinutes: 99
    cancelTimeoutInMinutes: 1
    pool:
      name: 'armv7-pool'
    steps:
      - template: azure-steps-nix.yml

  - job: ARM64_Linux
    variables:
      OS: Linux
    timeoutInMinutes: 99
    cancelTimeoutInMinutes: 1
    pool:
      name: 'arm64-pool'
    steps:
      - template: azure-steps-nix.yml

  - job: Ubuntu_20_04
    variables:
      OS: Linux
    timeoutInMinutes: 99
    cancelTimeoutInMinutes: 1
    pool:
      vmImage: 'ubuntu-20.04'
    steps:
      - template: azure-steps-nix.yml

  # needs explicit dotnet core installation
  - job: MacOS_Latest
    variables:
      OS: OSX
    timeoutInMinutes: 99
    cancelTimeoutInMinutes: 1
    pool:
      vmImage: 'macOS-latest'
    steps:
      - template: azure-steps-nix.yml

  - job: MacOS_12
    variables:
      OS: OSX
    timeoutInMinutes: 99
    cancelTimeoutInMinutes: 1
    pool:
      vmImage: 'macOS-12'
    steps:
      - template: azure-steps-nix.yml

  - job: WIN_2019
    variables:
      OS: Windows
    timeoutInMinutes: 99
    cancelTimeoutInMinutes: 1
    pool:
      vmImage: 'windows-2019'
    steps:
      - template: azure-steps-nix.yml

  - job: WIN_2022
    variables:
      OS: Windows
    timeoutInMinutes: 99
    cancelTimeoutInMinutes: 1
    pool:
      vmImage: 'windows-2022'
    steps:
      - template: azure-steps-nix.yml

trigger:
  - master

pr:
  branches:
    exclude:
      - '*'


